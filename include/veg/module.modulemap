module veg {

  module box {
    header "box.hpp"
    export *
  }
  module fn_dyn {
    header "fn_dyn.hpp"
    export *
  }
  module option {
    header "option.hpp"
    export *
  }
  module ref {
    header "ref.hpp"
    export *
  }
  module slice {
    header "slice.hpp"
    export *
  }
  module tuple {
    header "tuple.hpp"
    export *
  }
  module uwunion {
    header "uwunion.hpp"
    export *
  }
  module vec {
    header "vec.hpp"
    export *
  }


  module memory {
    module address {
      header "memory/address.hpp"
      export *
    }
    module alloc {
      header "memory/alloc.hpp"
      export *
    }
    module dynamic_stack {
      header "memory/dynamic_stack.hpp"
      export *
    }
    module placement {
      header "memory/placement.hpp"
      export *
    }
    module stack_alloc {
      header "memory/stack_alloc.hpp"
      export *
    }
  }

  module util {
    module assert {
      textual header "util/assert.hpp"
      header "internal/assert_impl.hpp"
      export *
    }
    module compare {
      header "util/compare.hpp"
      export *
    }
    module dbg {
      header "util/dbg.hpp"
      export *
    }
    module defer {
      header "util/defer.hpp"
      export *
    }
    module get {
      header "util/get.hpp"
      export *
    }
    module index {
      header "util/index.hpp"
      export *
    }
    module timer {
      header "util/timer.hpp"
      export *
    }
    module unreachable {
      header "util/unreachable.hpp"
      export *
    }
  }

  module functional {
    module bind {
      header "functional/bind.hpp"
      export *
    }
    module compose {
      header "functional/compose.hpp"
      export *
    }
    module copy_fn {
      header "functional/copy_fn.hpp"
      export *
    }
    module indexed {
      header "functional/indexed.hpp"
      export *
    }
    module overload {
      header "functional/overload.hpp"
      export *
    }
    module pipe {
      header "functional/pipe.hpp"
      export *
    }
    module ref {
      header "functional/ref.hpp"
      export *
    }
  }

  module type_traits {
    module alloc {
      header "type_traits/alloc.hpp"
      export *
    }
    module assignable {
      header "type_traits/assignable.hpp"
      export *
    }
    module constructible {
      header "type_traits/constructible.hpp"
      export *
    }
    module core {
      header "type_traits/core.hpp"
      export *
    }
    module invocable {
      header "type_traits/invocable.hpp"
      export *
    }
    module primitives {
      header "type_traits/primitives.hpp"
      export *
    }
    module tags {
      header "type_traits/tags.hpp"
      export *
    }
  }
}
